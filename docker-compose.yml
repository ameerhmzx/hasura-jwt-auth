version: '3.6'

services:

  postgres:
    image: postgres:12-alpine
    restart: always
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  graphql-engine:
    image: hasura/graphql-engine:latest
    ports:
      - "${HASURA_PORT}:8080"
    expose:
      - ${HASURA_PORT}
    depends_on:
      - "postgres"
      - "actions"
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: "postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/postgres"
      HASURA_GRAPHQL_ENABLE_CONSOLE: ${DEBUG}
      HASURA_GRAPHQL_DEV_MODE: ${DEBUG}
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: ${ADMIN_SECRET}
      ACTION_BASE_URL: "http://${ACTION_URL}:${ACTION_PORT}"
      HASURA_GRAPHQL_JWT_SECRET: "{\"jwk_url\":\"http://$ACTION_URL:$ACTION_PORT/.well-known/jwks.json\"}"
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: ${UNAUTHORIZED_ROLE}
      HASURA_GRAPHQL_ENABLE_TELEMETRY: ${TELEMETRY}

  actions:
    build:
      context: ./actions
      dockerfile: dockerFile.dev
    restart: always  
    ports:
      - "${ACTION_PORT}:${ACTION_PORT}"
    volumes:
      - "./actions:/usr/local/src/app"
      - "./secrets:/usr/local/src/secrets"
    expose:
      - ${ACTION_PORT}
    depends_on:
      - "postgres"
    environment:
      JWT_EXP_TIME: ${JWT_EXP_TIME}
      REF_EXP_DAYS: ${REF_EXP_DAYS}
      PORT: ${ACTION_PORT}
      DEBUG: ${DEBUG}
      AUTHENTICATED_ROLE: ${AUTHENTICATED_ROLE}
      HASURA_GQL_API: "http://graphql-engine:${HASURA_PORT}/v1/graphql"
      ADMIN_SECRET: ${ADMIN_SECRET}

volumes:
  db:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./db
